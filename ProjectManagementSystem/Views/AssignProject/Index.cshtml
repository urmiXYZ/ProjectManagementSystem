@{
    ViewData["Title"] = "Assigned Projects";
}

@if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
{
    <div class="mb-3 d-flex gap-2">
        <button type="button" class="btn btn-primary" onclick="openAssignProjectModal()">
            Assign Project <i class="fa fa-plus"></i>
        </button>
        <a href="/Project/Index" class="btn btn-secondary">
            All Projects <i class="fa fa-arrow-left"></i>
        </a>
        <button id="exportAssigned" class="btn btn-success">
            <i class="fa fa-file-excel"></i> Export Assigned Projects
        </button>
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text"><i class="fa fa-search"></i></span>
        <input type="text" id="searchAssigned" class="form-control" placeholder="Search by user or project name...">
    </div>
}
<h2>Assigned projects</h2>
<table id="assignedProjectsTbl" class="table table-bordered">
    <thead>
        <tr>
            <th>Assigned ID</th>
            <th>Project Name</th>
            <th>User Name</th>
            <th>Email</th>
            <th>Assigned Date</th>
            <th>Due Date</th>
            <th>Submit Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<div class="modal fade" id="assignModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Assign Project</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="AssignedId" />

                <div class="mb-3" id="userDiv">
                    <label for="AssignUserId" class="form-label">User:</label>
                    <select id="AssignUserId" class="form-select" multiple size="3"></select>
                </div>

                <div class="mb-3" id="projectDiv">
                    <label for="AssignProjectId" class="form-label">Project:</label>
                    <select id="AssignProjectId" class="form-select" multiple size="3"></select>
                </div>

                <div class="mb-3" id="dueDiv">
                    <label for="AssignDueDate" class="form-label">Due Date:</label>
                    <input type="date" id="AssignDueDate" class="form-control" />
                </div>

                <div class="mb-3" id="statusDiv" style="display:none;">
                    <label for="AssignStatus" class="form-label">Status:</label>
                    <select id="AssignStatus" class="form-select">
                        <option value="InProgress">In Progress</option>
                        <option value="Completed">Completed</option>
                        <option value="OnHold">On Hold</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnAssignSave">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="resubmitModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Resubmit Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="resubmitAssignId">
                <label for="newDueDate">New Due Date:</label>
                <input type="date" id="newDueDate" class="form-control">
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button class="btn btn-info" onclick="resubmitTask()">Resubmit</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
                $(document).ready(function () {
            loadAssignedProjects();

            $("#searchAssigned").on("keyup", function () {
                var value = $(this).val().toLowerCase().trim();
                $("#assignedProjectsTbl tbody tr").filter(function () {
                    var projectName = $(this).find("td:eq(1)").text().toLowerCase(); 
                    var userName = $(this).find("td:eq(2)").text().toLowerCase();    
                    $(this).toggle(projectName.indexOf(value) > -1 || userName.indexOf(value) > -1);
                });
            });
        });

                function exportTableToCSV(filename = 'assigned_projects.csv') {
            var csv = [];
            var rows = document.querySelectorAll("#assignedProjectsTbl tr");

            for (var i = 0; i < rows.length; i++) {
                var row = [], cols = rows[i].querySelectorAll("td, th");
                for (var j = 0; j < cols.length - 1; j++) { 
                    row.push('"' + cols[j].innerText.replace(/"/g, '""') + '"');
                }
                csv.push(row.join(","));
            }

            var csvFile = new Blob([csv.join("\n")], { type: "text/csv" });
            var downloadLink = document.createElement("a");
            downloadLink.download = filename;
            downloadLink.href = window.URL.createObjectURL(csvFile);
            downloadLink.style.display = "none";
            document.body.appendChild(downloadLink);
            downloadLink.click();
            document.body.removeChild(downloadLink);
        }

        $("#exportAssigned").click(function () {
            exportTableToCSV();
        });


        function saveChangedDueDateStatus() {
            var assignedId = parseInt($("#AssignedId").val());
            var dueDate = $("#AssignDueDate").val();
            var status = $("#AssignStatus").val();

            var statusMap = {
                "InProgress": 0,
                "Completed": 1,
                "OnHold": 2,
                "Cancelled": 3
            };

            var payload = {
                AssignedId: assignedId,
                DueDate: dueDate,
                Status: statusMap[status]
            };

            $.ajax({
                url: '/AssignProject/ChangeDueDateStatus',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(payload),
                success: function() {
                    $("#assignModal").modal('hide');
                    loadAssignedProjects();
                },
                error: function(xhr) {
                    console.error(xhr.responseText);
                }
            });
        }

        function openAssignProjectModal() {
            $.get('/User/Get', function(data) {
                $("#AssignUserId").empty();
                $.each(data, function(i, user) {
                    $("#AssignUserId").append(`<option value="${user.id}">${user.userName}</option>`);
                });
            });

            $.get('/Project/GetAll', function(data) {
                $("#AssignProjectId").empty();
                $.each(data, function(i, project) {
                    $("#AssignProjectId").append(`<option value="${project.projectId}">${project.projectName}</option>`);
                });
            });

            $("#AssignDueDate").val('');
            $("#assignModal").modal('show');
        }

        $("#btnAssignSave").click(function() {
            var userIds = $("#AssignUserId").val();
            var projectIds = $("#AssignProjectId").val();
            var dueDate = $("#AssignDueDate").val();

            var assignments = [];
            if(userIds && projectIds) {
                userIds.forEach(function(userId) {
                    projectIds.forEach(function(projectId) {
                        assignments.push({
                            UserId: parseInt(userId),
                            ProjectId: projectId,
                            DueDate: dueDate
                        });
                    });
                });
            }

            $.ajax({
                url: '/AssignProject/Assign',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(assignments),
                success: function() {
                    $("#assignModal").modal('hide');
                    loadAssignedProjects();
                },
                error: function(xhr) {
                    console.error(xhr.responseText);
                    alert("Failed to assign projects. Check console.");
                }
            });
        });

        function openChangeDueDateModal(assignedId, currentDueDate, currentStatus) {
            $("#modalTitle").text("Change Due Date / Status");
            $("#AssignedId").val(assignedId);
            $("#userDiv, #projectDiv").hide();
            $("#dueDiv, #statusDiv").show();

            $("#AssignDueDate").val(currentDueDate);
            $("#AssignStatus").val(currentStatus);

            $("#btnAssignSave").off('click').on('click', saveChangedDueDateStatus);
            $("#assignModal").modal('show');
        }

        var isEmployee = '@User.IsInRole("Employee")' === 'True';

                        function loadAssignedProjects() {
            $.get('/AssignProject/GetAll', function(data) {
                $('#assignedProjectsTbl tbody').empty();

                $.each(data, function(i, ap) {
                    let actionBtn = '';

                    if (isEmployee) {
                        if (ap.status === "OnHold" || ap.status === "Cancelled" || ap.submitDate) {
                            actionBtn = `<button class="btn btn-success btn-sm" disabled>Submit</button>`;
                        } else {
                            actionBtn = `<button class="btn btn-success btn-sm submitTask" data-id="${ap.assignedId}">Submit</button>`;
                        }
                    } else {
                        actionBtn = `<button class="btn btn-warning btn-sm" onclick="openChangeDueDateModal(${ap.assignedId}, '${ap.dueDate.split('T')[0]}', '${ap.status}')">Change Due Date / Status</button>`;

                        if (ap.status === "Completed") {
                            actionBtn += ` <button class="btn btn-info btn-sm" onclick="openResubmitModal(${ap.assignedId}, '${ap.dueDate.split('T')[0]}')">Resubmit</button>`;
                        }
                    }

                    var row = `<tr>
                        <td>${ap.assignedId}</td>
                        <td>${ap.project.projectName}</td>
                        <td>${ap.user.userName}</td>
                        <td>${ap.user.email}</td>
                        <td>${ap.assignedDate.split('T')[0]}</td>
                        <td>${ap.dueDate.split('T')[0]}</td>
                        <td>${ap.submitDate ? ap.submitDate.split('T')[0] : ''}</td>
                        <td>${ap.status}</td>
                        <td>${actionBtn}</td>
                    </tr>`;

                    $('#assignedProjectsTbl tbody').append(row);
                });
            });
        }



               $(document).on('click', '.submitTask', function () {
            var assignId = $(this).data('id');

            $.ajax({
                url: '/AssignProject/SubmitTask',
                type: 'POST',
                data: { assignId: assignId },
                success: function (res) {
                    loadAssignedProjects();
                },
                error: function () {
                }
            });
        });


        function loadUsers() {
            $.get('/User/Get', function(data) {
                $("#AssignUserId").empty();
                $.each(data, function(i, user) {
                    $("#AssignUserId").append(`<option value="${user.userId}">${user.userName}</option>`);
                });
            });
        }

        function loadProjects() {
            $.get('/Project/GetAll', function(data) {
                $("#AssignProjectId").empty();
                $.each(data, function(i, project) {
                    $("#AssignProjectId").append(`<option value="${project.projectId}">${project.projectName}</option>`);
                });
                $("#AssignProjectId").prepend('<option value="" selected disabled>Select Project</option>');
            });
        }

                function openResubmitModal(assignId, currentDueDate) {
            $("#resubmitAssignId").val(assignId);
            $("#newDueDate").val(currentDueDate);
            var modal = new bootstrap.Modal(document.getElementById('resubmitModal'));
            modal.show();
        }
                function resubmitTask() {
            var assignId = $("#resubmitAssignId").val();
            var newDueDate = $("#newDueDate").val();

            if (!newDueDate) {
                alert("Please select a new due date.");
                return;
            }

            $.ajax({
                url: '/AssignProject/ResubmitTask',
                type: 'POST',
                data: { assignId: assignId, dueDate: newDueDate },
                success: function(res) {
                    alert(res.msg);
                    $('#resubmitModal').modal('hide');
                    loadAssignedProjects();
                },
                error: function(err) {
                    alert(err.responseJSON?.msg || "Failed to resubmit task");
                }
            });
        }


        $(document).ready(function() {
            loadAssignedProjects();
        });
    </script>
}



